package com.petshop.controller.web;

import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.util.ResourceBundle;

import javax.inject.Inject;
import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.petshop.model.UserModel;
import com.petshop.service.IUserService;
import com.petshop.utils.FormUtil;
import com.petshop.utils.SessionUtil;

@WebServlet(urlPatterns = {"/trang-chu","/dang-nhap","/thoat","/dang-ki"})
public class HomeController extends HttpServlet {

	@Inject
	private IUserService userService;
	ResourceBundle resourceBundle =ResourceBundle.getBundle("message");

	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		String action = req.getParameter("action");
		
		if(action!=null&&action.equals("login")) {
			String message = req.getParameter("message");
			String alert = req.getParameter("alert");
			if(message!=null&&alert!=null) {
				req.setAttribute("message", resourceBundle.getString(message));
				req.setAttribute("alert", alert);
			}
			RequestDispatcher rd = req.getRequestDispatcher("/views/login.jsp");
			rd.forward(req, resp);
		}else if(action!=null&&action.equals("logout")) {
			SessionUtil.getInstance().removeValue(req, "USERMODEL");
			resp.sendRedirect(req.getContextPath()+"/trang-chu");
		}else if (action!=null&&action.equals("signup")) {
			String message = req.getParameter("message");
			String alert = req.getParameter("alert");
			if(message!=null&&alert!=null) {
				req.setAttribute("message", resourceBundle.getString(message));
				req.setAttribute("alert", alert);
			}
			RequestDispatcher rd = req.getRequestDispatcher("/views/signUp.jsp");
			rd.forward(req, resp);
		}else {
			RequestDispatcher rd = req.getRequestDispatcher("/views/web/home.jsp");
			rd.forward(req, resp);
		}
		
	}

	@Override
	protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
	    String action = req.getParameter("action");
	    
	    if (action != null && action.equals("login")) {
	        UserModel model = FormUtil.toModel(UserModel.class, req);
	        model = userService.findByUserNameAndPasswordAndStatus(model.getUserName(), model.getPassword(), 1);
	        if (model != null) {
	            SessionUtil.getInstance().putValue(req, "USERMODEL", model);
	            if (model.getRole().getCode().equals("REGISTERED_CUSTOMER")|| model.getRole().getCode().equals("STAFF")) {
	                resp.sendRedirect(req.getContextPath() + "/trang-chu");
	            } else if (model.getRole().getCode().equals("ADMIN")) {
	                resp.sendRedirect(req.getContextPath() + "/admin-home");
	            }
	        } else {
	            resp.sendRedirect(req.getContextPath() + "/dang-nhap?action=login&message=username_password_invalid&alert=danger");
	        }
	    } else if (action != null && action.equals("signup")) {
	        UserModel model = FormUtil.toModel(UserModel.class, req);
	        
	        Long id = userService.DangKiTaiKhoan(model.getTenuser(), model.getUserName(), model.getPassword(), model.getEmail());
	        
	        if (id != null) {
	            model = userService.findByUserNameAndPasswordAndStatus(model.getUserName(), model.getPassword(), 1);
	            if (model != null) {
	                SessionUtil.getInstance().putValue(req, "USERMODEL", model);
	                if (model.getRole().getCode().equals("REGISTERED_CUSTOMER")|| model.getRole().getCode().equals("STAFF")) {
	                    resp.sendRedirect(req.getContextPath() + "/trang-chu");
	                } else if (model.getRole().getCode().equals("ADMIN")) {
	                    resp.sendRedirect(req.getContextPath() + "/admin-home");
	                }
	            } else {
	                resp.sendRedirect(req.getContextPath() + "/dang-nhap?action=login&message=username_password_invalid&alert=danger");
	            }
	        } else {
	            resp.sendRedirect(req.getContextPath() + "/dang-ki?action=signup&message=username_password_error&alert=danger");
	        }
	    }
	}

}
